public class Solution {
    void reverse(int[] A, int i, int j){
        while(i<j){
            swap(A, i, j);
            i++;j--;
        }
    }
    void swap(int[] A, int i, int j){
        int temp = A[i];
        A[i] = A[j];
        A[j] = temp;
    }
    public int[] nextPermutation(int[] A) {
        int n = A.length;
        if(n==1){
            return new int[]{A[0]};
        }

        int k=-1;
        for(int i=n-2; i>=0; i--){
            if(A[i] < A[i+1]){
                k = i;
                break;
            }
        }

        if(k==-1){
            reverse(A, 0, n-1);
            return A;
        }

        int v = -1;

        for(int i=n-1; i>=k; i--){
            if(A[i] > A[k]){
                v = i;
                break;
            }
        }

        swap(A, k, v);
        reverse(A, k+1, n-1);

        return A;
    }
}
